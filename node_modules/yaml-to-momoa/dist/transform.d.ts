import type { ArrayNode, BooleanNode, NullNode, NumberNode, ObjectNode, StringNode, ValueNode } from "@humanwhocodes/momoa";
import { Alias, type Document, type Range, Scalar, YAMLMap, YAMLSeq } from "yaml";
export type YAMLNode = Alias | Scalar | YAMLMap<Scalar, YAMLNode> | YAMLSeq<YAMLNode>;
interface TransformOptions {
    /** Convert YAML range to Momoa Loc */
    transformRange: (range?: Range | null | undefined) => ValueNode["loc"];
    /** YAML document */
    doc: Document;
}
export declare function transform(node: YAMLNode | null | undefined, { doc, transformRange }: TransformOptions): ValueNode;
export declare function transformYAMLMap(node: YAMLMap<Scalar, YAMLNode>, { doc, transformRange }: TransformOptions): ObjectNode;
export declare function transformYAMLSeq(node: YAMLSeq<YAMLNode>, { doc, transformRange }: TransformOptions): ArrayNode;
export declare function transformScalar(node: Scalar, { transformRange }: TransformOptions): StringNode | BooleanNode | NumberNode | NullNode;
export {};
