import { type AnyNode, type MemberNode, type ObjectNode, type ValueNode } from '@humanwhocodes/momoa';
import type yamlToMomoa from 'yaml-to-momoa';
import type Logger from '../logger.js';
import type { InputSource } from '../types.js';
export interface Visitor {
    enter?: (node: AnyNode, parent: AnyNode | undefined, path: string[]) => void;
    exit?: (node: AnyNode, parent: AnyNode | undefined, path: string[]) => void;
}
export declare const CHILD_KEYS: {
    Document: readonly ["body"];
    Object: readonly ["members"];
    Member: readonly ["name", "value"];
    Element: readonly ["value"];
    Array: readonly ["elements"];
    String: readonly [];
    Number: readonly [];
    Boolean: readonly [];
    Null: readonly [];
    Identifier: readonly [];
    NaN: readonly [];
    Infinity: readonly [];
};
/** Determines if a given value is an AST node. */
export declare function isNode(value: unknown): boolean;
export type ValueNodeWithIndex = ValueNode & {
    index: number;
};
/** Get ObjectNode members as object */
export declare function getObjMembers(node: ObjectNode): Record<string | number, ValueNodeWithIndex>;
/**
 * Inject members to ObjectNode
 * @param {ObjectNode} node
 * @param {MemberNode[]} members
 */
export declare function injectObjMembers(node: ObjectNode, members?: MemberNode[]): void;
/**
 * Variation of Momoaâ€™s traverse(), which keeps track of global path.
 * Allows mutation of AST (along with any consequences)
 */
export declare function traverse(root: AnyNode, visitor: Visitor): void;
/** Determine if an input is likely a JSON string */
export declare function maybeRawJSON(input: string): boolean;
/** Find Momoa node by traversing paths */
export declare function findNode<T = AnyNode>(node: AnyNode, path: string[]): T | undefined;
export interface ToMomoaOptions {
    filename?: URL;
    continueOnError?: boolean;
    logger: Logger;
    yamlToMomoa?: typeof yamlToMomoa;
}
export declare function toMomoa(input: string | Record<string, any>, { continueOnError, filename, logger, yamlToMomoa }: ToMomoaOptions): InputSource;
//# sourceMappingURL=json.d.ts.map